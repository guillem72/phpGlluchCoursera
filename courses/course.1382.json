{
    "id": 1382,
    "shortName": "hardwaresec",
    "name": "Hardware Security",
    "language": "en",
    "shortDescription": "In this course, we will study security and trust from the hardware perspective. Upon completing the course, students will understand the vulnerabilities in current digital system design flow and the physical attacks to these systems. They will learn that security starts from hardware design and be familiar with the tools and skills to build secure and trusted hardware.",
    "aboutTheCourse": "<span><p>Hardware is the root of computation and communication. It is the enabler of any software, algorithm, or communication protocols. All the computation will eventually be carried out by hardware, namely the processor or the circuits.<br><\/p><p>In this course, we will study security and trust from the hardware perspective. We will start with a short survey of the roles of hardware in security and trust. With all types of dedicated hardware\/circuits, known as co-processors, being developed to speed up application specific computations, hardwareâ€™s role changes from the enabler to an enhancer. Nowadays, hardware becomes the enforcer for secure systems because it is used to ensure that only the authenticated user and software can access the processor. However, current hardware design flow does not have security as a key design objective. Consequently, we will conduct several case studies where hardware turns into the weakest link in secure systems. <\/p><p> <\/p><p>Then we will review the fundamentals of digital logic design and use this as an example to analyze the source of security vulnerabilities and demonstrate how these vulnerabilities can become legitimate security threats. We conclude with the basic principles and practical methods of design for security and trust, as well as a study of the associated design cost. &nbsp;<\/p><p>Next, we introduce physical attacks to popular digital systems such as smart cards and FPGA-based systems. We will focus on side-channel attacks, which have been demonstrated many times to be able to successfully reveal the secret cryptographic keys stored in the secure systems. These attacks include power analysis, timing attacks, and electromagnetic attacks. Standard countermeasures to these attacks will also be introduced.<\/p><p> <\/p><p>Finally we will learn the new hardware security primitives that can help us to build secure systems. We will see how the trust platform module (TPM) works; what is a silicon physical unclonable function (PUF) and why it is useful for system security; what is a hardware Trojan horse and the security threats it brings to the system; why counterfeiting becomes a serious problem for hardware design intellectual property protection.<\/p><p> <\/p><p>Upon completing the course, students will understand the vulnerabilities in current digital system design flow and the physical attacks to these systems. They will learn that security starts from hardware design and be familiar with the tools and skills to build secure and trusted hardware. <\/p><div><br><\/div><\/span>",
    "courseSyllabus": "<span><b>Trust in digital system design<\/b><br><ul><li><p>Vulnerability in combinational logic<\/p><\/li><li><p>Vulnerability in sequential logic and finite state machine<\/p><\/li><li><p>Hardware Trojan Horse <\/p><\/li><li><p>Circuit obfuscation<\/p><\/li><\/ul><b>Side-channel attacks<\/b><br><ul><li><p>Power analysis<\/p><\/li><li><p>Timing attacks<\/p><\/li><li><p>ElectroMagnetic analysis &nbsp;&nbsp;&nbsp;&nbsp;<\/p><\/li><\/ul><b>Physical attacks<\/b><br><ul><li><p>Fault injection attack<\/p><\/li><li><p>Smart card security<\/p><\/li><li><p>Field Programmable Gate Array (FPGA) security <\/p><\/li><\/ul><b>Emerging hardware security topics<\/b><br><ul><li><p>Trust Platform Modules (TPM)<\/p><\/li><li><p>Physical Unclonable Functions (PUF)<\/p><\/li><li><p>True Random Number Generators (TRNG)<\/p><\/li><li><p>RFID tag<\/p><\/li><li><p>Counterfeiting<\/p><\/li><li><p>Intellectual property protection<\/p><\/li><\/ul><\/span>",
    "estimatedClassWorkload": "3-5 hours\/week",
    "recommendedBackground": "<ul><li><p>Junior-level undergraduate students with computer science, computer engineering, or electrical engineering major. <\/p><\/li><li><p>Basic skills in programming, digital logic design, and computer organization are highly recommended.<\/p><\/li><\/ul>",
    "links": {

    }
}