{"id":1901,"shortName":"modelingoptimization","name":"Modeling Discrete Optimization","language":"en","shortDescription":"Learn a new way to approach problem solving by stating the problem and letting powerful constraint solving software do the rest.  This class teaches you the art of encoding complex discrete optimization problems in the MiniZinc modeling language and then shows you how to effortlessly solve them by leveraging state-of-the-art open-source constraint solving software.","aboutTheCourse":"<p>The world is full of hard discrete optimization problems. You have experienced them already if you have ever solved a sudoku puzzle or organized the seating at a wedding banquet. These problems underpin much of our daily lives and are part of determining daily delivery routes for packages, making school timetables, and delivering power to our homes. Despite their fundamental importance, all of these problems are a nightmare to solve using traditional undergraduate computer science methods. <\/p>\n<p>In this course you will learn an entirely new way to think about solving these challenging discrete optimization problems by stating the problem in the high level modeling language, <a href=\"http:\/\/www.minizinc.org\/\" target=\"_blank\">MiniZinc<\/a>, and letting constraint solving software do the rest.  This will allow you to unlock the power of industrial solving technologies, which have been perfected over decades by hundreds of PhD researchers. &nbsp;With access to this advanced technology, problems that you could not conceive solving before will suddenly become easy and bring you one step closer to \"<i>the holy grail of programming: the user states the problem, the computer solves it.<\/i>\" (<a href=\"http:\/\/link.springer.com\/article\/10.1023%2FA%3A1009749006768\" target=\"_blank\">Eugene Freuder&nbsp;'96<\/a>)<\/p><p>An introductory lecture to the course can viewed&nbsp;<a href=\"https:\/\/youtu.be\/mN-XvxgeDhc\" target=\"_blank\" title=\"null\">here<\/a>.<br><\/p>","targetAudience":1,"courseSyllabus":"The course has an open format. &nbsp;At the start of the course all of the assignments and lectures are available and each student is free to design their own plan of study and proceed at their own pace. &nbsp;The assessments in the course consist of five modeling tasks where students experience the challenges of solving discrete optimization problems. &nbsp;The class community is an important aspect of this course and students are encouraged to collaborate and help each other in the completion of the assignments.","courseFormat":"The course will consist of lecture videos, which are between 8 and 20&nbsp;minutes in length (approximately 2 hours per week), and modeling assignments, which&nbsp;exercise&nbsp;the course&nbsp;concepts and require some creativity. &nbsp;Extensive workshop&nbsp;exercises&nbsp;and auxiliary materials are&nbsp;provided to help students practice modeling, broaden their understanding, and fill gaps in their background knowledge. Successful students often spend between 5 to 10 hours a week on the assignments depending on their background knowledge and level of interest.","suggestedReadings":"The lectures are designed to be self contained, but a variety of useful materials are available on the <a href=\"http:\/\/www.minizinc.org\" target=\"_blank\">MiniZinc web site<\/a>, including a <a href=\"http:\/\/www.minizinc.org\/downloads\/doc-latest\/minizinc-tute.pdf\" target=\"_blank\">MiniZinc tutorial<\/a>.","estimatedClassWorkload":"5-10 hours\/week","recommendedBackground":"Good programming skills, knowledge of fundamental algorithms, and a general comfort with mathematics.","links":{}}