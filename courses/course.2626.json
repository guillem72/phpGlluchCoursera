{"id":2626,"shortName":"mobilecloudsecurity","name":"Programming Cloud Services for Android Handheld Systems: Security","language":"en","shortDescription":"This course introduces students to basic issues in mobile cloud security, malware, and secure client\/server communication. Students will learn about security risks in Android and cloud services, threat mitigation strategies, secure coding practices, and tools for managing security of devices. ","aboutTheCourse":"<span>A key challenge of mobile platforms is that the apps installed on a device increase the number of potential security vulnerabilities. Mistakes in app development or cloud services can lead to vulnerabilities that cause users data to be stolen, charges to user accounts, and spread of malware to a user\u2019s friends. Ensuring that mobile cloud application developers are aware of potential vulnerabilities and avoid introducing them into their code is an essential part of building a more secure app ecosystem.<p dir=\"ltr\"><\/p>The course is designed to help students understand how to write more secure mobile cloud applications for Android. Students will be introduced to specific vulnerabilities that have affected well-known apps and be given a wide view of app threats on Android. Developers will also be introduced to the secure coding techniques that can be used to help prevent the introduction of app and cloud service vulnerabilities.<p dir=\"ltr\"><strong>The Mobile Cloud Computing with Android (MoCCA) Specialization<\/strong><\/p><p dir=\"ltr\">This is the <strong>6th course<\/strong> of the six-course <a href=\"https:\/\/www.coursera.org\/specialization\/mobilecloudcomputing\/2\">Mobile Cloud Computing with Android (MoCCA) Specialization<\/a>. It has been designed as part of a Coursera Specialization designed to help learners create complex, cloud-based Android Applications, and includes a final \u201ccapstone\u201d project for those who earn Verified Certificates across all six courses.<\/p><p dir=\"ltr\"><strong>Note: <\/strong>We are proud to announce that the MoCCA specialization has already reached hundreds of thousands of learners around the globe. In its last iteration, we worked with Google to provide Nexus tablets, feedback from the Google App team, and the potential to be featured in the Google Play store to top course completers.<\/p><p dir=\"ltr\">This time around, we are providing more flexibility for all of you busy learners. We are running the Programming Mobile Applications courses in more digestible one-month-long sections, each with a meaningful mini-project at the end. Additionally, we will be re-offering the courses more frequently. For example, new sessions of my two introductory courses will be launched on a monthly basis, so that you can find a convenient time to join us or pick up where you left off if you didn\u2019t quite finish before.<\/p><p dir=\"ltr\"><strong>For previous MoCCA students:<\/strong> If you have already earned a Verified Certificate in the previous version of this course, \"Pattern-Oriented Software Architectures: Programming Mobile Services for Android Handheld Systems\u201d offered in May 2014, you do not need to retake this course to continue towards the Specialization certificate and final project in 2015. Please consult the <a href=\"https:\/\/courserahelp.zendesk.com\/hc\/en-us\/articles\/201223289-Specializations\">Specializations Help Center<\/a> or contact the <a href=\"https:\/\/courserahelp.zendesk.com\/hc\/en-us\/requests\/new?ticket_form_id=19009\">Coursera support team<\/a> if you are not sure whether you qualify.<\/p><p dir=\"ltr\">This MOOC and five others, taught by Dr. Adam Porter from the University of Maryland and Dr. Jules White from Vanderbilt University, have been designed to complement each other as part of the first trans-institution sequence of MOOCs taught on the Coursera platform, structured as follows:<\/p><ul><li><p dir=\"ltr\">The first two courses by Dr. Adam Porter, of the University of Maryland, are <a href=\"https:\/\/www.coursera.org\/course\/androidpart1\">Programming Mobile Applications for Android Handheld Systems Part 1<\/a> and <a href=\"https:\/\/www.coursera.org\/course\/androidpart2\">Part 2<\/a>. They focus on the design and programming of user-facing applications. &nbsp;<\/p><\/li><li><p dir=\"ltr\">The third and fourth courses by Dr. Douglas Schmidt, of Vanderbilt University, are <a href=\"https:\/\/www.coursera.org\/course\/posaconcurrency\" title=\"Link: https:\/\/www.coursera.org\/course\/posaconcurrency\">Programming Mobile Services for Android Handheld Systems: Concurrency<\/a> and <a href=\"https:\/\/www.coursera.org\/course\/posacommunication\">Communication<\/a>. They focus on middleware systems programming topics, such as synchronous and asynchronous concurrency models, background service processing, structured data management, local inter-process communication and networking, and integration with cloud-based services. &nbsp;<\/p><\/li><li><p dir=\"ltr\">The fifth and sixth courses by Dr. Jules White, of Vanderbilt University, are <a href=\"https:\/\/www.coursera.org\/course\/mobilecloudprogram\">Programming Cloud Services for Android Handheld Systems: Spring<\/a> and <a href=\"https:\/\/www.coursera.org\/course\/mobilecloudsecurity\">Security<\/a>. &nbsp;They focus on how to connect Android mobile devices to cloud computing and data storage resources, essentially turning a device into an extension of powerful cloud-based services on popular cloud computing platforms, such as Google App Engine and Amazon EC2. <\/p><\/li><li><p dir=\"ltr\">The final \u201ccapstone\u201d project will require students to develop a complex mobile cloud computing application from the ground up.<\/p><\/li><\/ul><p dir=\"ltr\">Some of the programming assignments and the iRemember integrative project for these MOOCs will be coordinated. &nbsp;<\/p>If you just want to take some of the MOOCs in this sequence or take them all in different order you\u2019re certainly welcome to do so, and you\u2019ll still learn a lot. However, if you take all the MOOCs in this sequence in the order presented you\u2019ll gain a deeper, end-to-end understanding of handheld systems, their applications and services, as well as their integration into the cloud.<\/span>","targetAudience":1,"courseSyllabus":"<p>This MOOC describes, by example, the basics of securing mobile applications and back-end cloud services. The class is taught in the context of Java, Android, and&nbsp;the <a href=\"http:\/\/projects.spring.io\/spring-framework\/\">Java Spring Framework<\/a>. Although the cloud service topics in this course will be taught in the context of connecting mobile devices to the cloud, the concepts are broader and will give students the ability to create the cloud services to support large-scale web applications, such as social networking applications; cloud services for embedded systems, such as the Internet of Things and Industrial Internet; and wearable computing devices.<\/p><p>The course is organized into the sections outlined below (additional lectures may be provided live once the MOOC has begun):<br><\/p><li><p dir=\"ltr\">Module 1: Android App Security and Risks<\/p><\/li><ul><li>Part 1: Traditional App Accounts<\/li><li>Part 2: Mobile vs. Traditional App Accounts<\/li><li>Part 3: App Account Mapping to Linux Users<\/li><li>Part 4: Apps Lie &amp; Steal<\/li><li>Part 5: How Android Protects Apps<\/li><li>Part 6: What Android Doesn't Protect<\/li><li>Part 7: Avoid Storing Sensitive Data in Public Locations<\/li><li>Part 8: Risks of Insecure File Permissions<\/li><\/ul><li>Module 2: Building More Secure Android Apps<\/li><ul><li>Part 0: The Challenge of Secure Coding<\/li><li>Part 1: Security Vulnerability Walkthrough<\/li><li>Part 2: Principles of Secure Abstractions<\/li><li>Part 3: Avoid Coupling Data &amp; Security State<\/li><li>Part 4: Build Abstractions that are Hard to Use Insecurely<\/li><li>Part 5: Bound &amp; Strongly Type Security State<\/li><li>Part 6: Avoid Conditional Logic in Secure Pathways<\/li><li>Part 7: Prevent Secure Pathways from Being Broken at Runtime<\/li><li>Part 8: Privilege Escalation Concepts<\/li><li>Part 9: Privilege Escalation Scenario<\/li><li>Part 10: Privilege Escalation Code Walkthrough<\/li><li>Part 11: Privilege Escalation Fixes<\/li><li>Part 12: User Interface Attacks<\/li><li>Part 13: Cross-platform User Interface Attacks<\/li><\/ul><li>Module 3: Secure HTTP Communication<\/li><ul><li>Part 1: Man in the Middle Attacks Public Key Infrastructure<\/li><li>Part 2: HTTPS<\/li><li>Part 3: Challenges of Storing Secrets on Mobile<\/li><li>Part 4: WebView Security Issues &amp; Best Practices<\/li><\/ul><li>Module 4: What was I Saying: Keeping Track of Sessions<\/li><ul><li>Part 1: Sessions<\/li><li>Part 2: Spring Security Overview<\/li><li>Part 3: Spring Security Configuration in Java<\/li><li>Part 4: Building a Custom UserDetailsService<\/li><li>Part 5: Setting up a custom UserDetailsService<\/li><li>Part 6: The Principal<\/li><li>Part 7: Spring Security Role Annotations<\/li><li>Part 8: More Complex Expression-based Pre Post Authorize Annotations<\/li><li>Part 9: Spring Security Controller Code Walkthrough<\/li><li>Part 10: Spring Security Controller Test Code Walkthrough<\/li><\/ul><li>Module 5: Authenticating Mobile Clients with OAuth<\/li><ul><li>Part 1: Stateful Sessions with Cookies Why They Aren't Ideal for Mobile<\/li><li>Part 2: Stateless Sessions with Tokens<\/li><li>Part 3: OAuth 2.0<\/li><li>Part 4: Spring Security OAuth 2.0<\/li><li>Part 5: A Spring OAuth 2.0 Secured Service<\/li><li>Part 6: A Retrofit Oauth 2.0 Client for Password Grants<\/li><\/ul>","courseFormat":"The class will consist of lecture videos designed to ensure you understand the material covered in the videos. Students in this track will also complete auto-\/peer-graded programming assignments. The programming assignments will involve fixing security vulnerabilities in Android apps or writing cloud services using popular software frameworks written in Java, such as&nbsp;<a href=\"http:\/\/projects.spring.io\/spring-framework\/\" target=\"_blank\" title=\"Link: http:\/\/projects.spring.io\/spring-framework\/\">Spring Framework<\/a>.&nbsp;","suggestedReadings":"Although the lectures are designed to be largely self-contained, it's recommended (but not required) that students refer to the following books:<br><ul><li>Martin Fowler,&nbsp;<a href=\"http:\/\/www.amazon.com\/Refactoring-Improving-Design-Existing-Code\/dp\/0201485672\" target=\"_blank\">Refactoring: Improving the Design of Existing Code<\/a>, Addison-Wesley Professional, 1999.<\/li><li>Goetz et al.,&nbsp;<a href=\"http:\/\/www.amazon.com\/Java-Concurrency-Practice-Brian-Goetz\/dp\/0321349601\" target=\"_blank\">Java Concurrency in Practice<\/a>, Addison-Wesley, 2006.<\/li><li>Doug Lea,&nbsp;<i><a href=\"http:\/\/www.amazon.com\/Concurrent-Programming-Java-Principles-Pattern\/dp\/0201310090\">Concurrent Programming in Java<\/a><\/i>, Prentice Hall, 1999.<\/li><li>Gamma et at.,&nbsp;<i><a href=\"http:\/\/chggtrx.com\/click.track?CID=267582&amp;AFID=301076&amp;ADID=1088031&amp;SID=posa&amp;isbn_ean=9780201633610\" title=\"Link: http:\/\/chggtrx.com\/click.track?CID=267582&amp;AFID=301076&amp;ADID=1088031&amp;SID=posa&amp;isbn_ean=9780201633610\">Design Patterns: Elements of Reusable Object-Oriented&nbsp;<\/a><\/i><i><a href=\"http:\/\/chggtrx.com\/click.track?CID=267582&amp;AFID=301076&amp;ADID=1088031&amp;SID=posa&amp;isbn_ean=9780201633610\">Software<\/a><\/i>, Addison-Wesley, Reading, MA, 1995..<\/li><li>Schmidt et al.,&nbsp;<i><a href=\"http:\/\/chggtrx.com\/click.track?CID=267582&amp;AFID=301076&amp;ADID=1088031&amp;SID=posa&amp;isbn_ean=9780471606956\">Pattern-Oriented Software Architecture, Vol 2: Patterns for&nbsp;<\/a><\/i><i><a href=\"http:\/\/chggtrx.com\/click.track?CID=267582&amp;AFID=301076&amp;ADID=1088031&amp;SID=posa&amp;isbn_ean=9780471606956\">Concurrent and Networked Objects<\/a><\/i>, Wiley and Sons, 2000.<\/li><li>Buschmann et al.,&nbsp;<i><a href=\"http:\/\/www.amazon.com\/Pattern-Oriented-Software-Architecture-Volume-Distributed\/dp\/0470059028\/ref=pd_sim_b_1\">Pattern-Oriented Software Architecture:, Vol 4: A Pattern Language for Distributed Computing<\/a><\/i>, Wiley and Sons, 2007.<\/li><li>Buschmann et al.,&nbsp;<i><a href=\"http:\/\/www.amazon.com\/Pattern-Oriented-Software-Architecture-Languages\/dp\/0471486485\">Pattern-Oriented Software Architecture, Vol 5&nbsp;On Patterns and Pattern Langauges<\/a><\/i>, Wiley and Sons, 2007.<\/li><\/ul><div>Much of this material is available&nbsp;<a href=\"http:\/\/www.dre.vanderbilt.edu\/~schmidt\/tutorials.html\">online<\/a>.<\/div>","estimatedClassWorkload":"8-12 hours\/week","recommendedBackground":"<span><p dir=\"ltr\">Ideally, students who take this course will be familiar with general object-oriented design and programming concepts (such as encapsulation, abstraction, polymorphism, extensibility ), fundamental Java object-oriented programming language features (such as classes, inheritance, interfaces, and generics available in Java, basic systems programming concepts (such as event handling, processes\/threads, synchronization), and networking terminology (such as client\/server and peer-to-peer architectures). &nbsp;<\/p><div><br><\/div><\/span>","links":{}}