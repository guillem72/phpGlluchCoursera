{
    "id": 2758,
    "shortName": "principlescomputing1",
    "name": "Principles of Computing (Part 1)",
    "language": "en",
    "shortDescription": "This two-part course introduces the basic mathematical and programming principles that underlie much of Computer Science.  Students will refine their programming skills as well as learn the basics of creating efficient solutions to common computational problems.",
    "aboutTheCourse": "This two-part course (part 2 is available <a href=\"https:\/\/www.coursera.org\/course\/principlescomputing2\">here<\/a>) introduces the basic mathematical and programming principles that underlie much of Computer Science. Understanding these principles is crucial to the process of creating efficient and well-structured solutions for computational problems.\n<p><\/p><p>\nTo get hands-on experience working with these concepts, we will use the Python programming language. The main focus of the class will be weekly mini-projects that build upon the mathematical and programming principles that are taught in the class. To keep the class fun and engaging, many of the projects will involve working with strategy-based games.<\/p><p><\/p><p>\nAfter completing this course, you will have a much stronger background in Computer Science and be capable of writing Python programs that are both efficient and well-structured. You will also have a better understanding of how to approach more complex computational problems. As always, our goal is to teach these principles of computing in a fun and exciting way. We look forward to seeing you in class!<\/p>",
    "targetAudience": 0,
    "courseSyllabus": "Our course syllabus can be seen at <a href=\"http:\/\/www.codeskulptor.org\/coursera\/principlescomputing.html\">www.codeskulptor.org\/coursera\/principlescomputing.html<\/a>.",
    "estimatedClassWorkload": "7-10 hours\/week",
    "recommendedBackground": "Prior programming experience at the level of <a href=\"https:\/\/www.coursera.org\/course\/interactivepython2\">\"An Introduction to Interactive Programming in Python (Part 2)\"<\/a> (IIPP).  Students that have not taken IIPP are welcome, but should be comfortable writing small (100+ line) programs in Python using constructs such as lists, dictionaries and classes.  Students should also have a high-school math background that includes algebra and pre-calculus. The first week of class will include material designed to help students accurately self-assess whether they have the necessary background to be successful in this class.",
    "links": {

    }
}