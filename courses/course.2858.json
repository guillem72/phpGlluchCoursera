{"id":2858,"shortName":"assembly","name":"Genome Sequencing (Bioinformatics II)","language":"en","shortDescription":"Biologists still cannot read the nucleotides of an entire genome as you would read a book from beginning to end. However, they can read short pieces of DNA. In this course, we will see how graph theory can be used to assemble genomes from these short pieces. We will further learn about brute force algorithms and apply them to sequencing mini-proteins called antibiotics. Finally, you will learn how to apply popular bioinformatics software tools to sequence the genome of a deadly Staphylococcus bacterium.\n\n","aboutTheCourse":"In \"<a href=\"http:\/\/coursera.org\/course\/bioinformatics\" target=\"_blank\">Finding Hidden Messages in DNA<\/a>\", we discussed how to find short regulatory motifs in genomes. &nbsp;But how do we know what the DNA sequence making up a genome is in the first place? &nbsp;After all, biologists still do not possess technology that would read all the nucleotides of your genome from beginning to end.<br><br>In this course, you will learn how entire genomes are assembled from millions of short overlapping pieces of DNA. &nbsp;The scale of this problem (the human genome is 3 billion nucleotides long!) implies that computers must be involved. Yet the problem is even more complex than it may appear ... to solve it, we will need to travel back in time to meet three famous mathematicians, and learn about algorithms based on <strong>graph theory<\/strong>.<br><br>Later in the course, we will see that sequencing genomes is not the only task related to decoding biological macromolecules.&nbsp; Another difficult problem is sequencing antibiotics, short mini-proteins engineered by bacteria to fight each other.&nbsp; Even though antibiotics often contain fewer than 10 amino acids, sequencing them is a formidable challenge.&nbsp;Decoding the sequence of amino acids making up an antibiotic is an important biomedical problem, but the practical barriers to sequencing short antibiotics are often more substantial than barriers to assembling a genome with millions of&nbsp; nucleotides! To address this computational challenge, we will learn about <strong>brute force algorithms<\/strong> that often succeed in various bioinformatics applications.<br><br>Finally in this course, you will learn how to apply popular bioinformatics software tools to assemble a deadly Staphylococcus bacterium. You will also be introduced to the popular cloud service BaseSpace offered by Illumina, the leading DNA sequencing company, thus joining the thousands of biologists and bioinformaticians who use BaseSpace every day.<br><br>","targetAudience":1,"courseSyllabus":"<strong>How Do We Assemble Genomes? <\/strong>(Graph Algorithms)<br><ul><li>Exploding Newspapers<\/li><li>The String Reconstruction Problem<\/li><li>String reconstruction as a walk in the overlap graph<\/li><li>Another graph for string reconstruction<\/li><li>Walking in the de Bruijn graph<\/li><li>The seven bridges of Konigsberg<\/li><li>Euler's Theorem<\/li><li>From Euler's Theorem to an Algorithm for Finding Eulerian Cycles<\/li><li>Assembling genomes from read-pairs<\/li><li>Epilogue: Genome assembly faces real sequencing data<\/li><\/ul><strong>How Do We Sequence Antibiotics? <\/strong>(Brute Force Algorithms)<br><ul><li>The Discovery of Antibiotics<\/li><li>How Do Bacteria Make Antibiotics?<\/li><li>Dodging the Central Dogma<\/li><li>Sequencing Antibiotics by Shattering them into Pieces<\/li><li>A Brute Force Algorithm for Cyclopeptide Sequencing<\/li><li>A Branch-and-Bound Algorithm for Cyclopeptide Sequencing<\/li><li>Just How Fast Is This Algorithm?<\/li><li>Adapting Cyclopeptide Sequencing for Spectra with Errors<\/li><li>From 20 to More than 100 Amino Acids<\/li><li>The Spectral Convolution Saves the Day<\/li><li>Epilogue: From Simulated to Real Spectra<strong><\/strong><\/li><\/ul><strong>Bioinformatics Application Challenge:&nbsp;<\/strong>Sequencing a<i>&nbsp;Staphylococcus aureus <\/i>genome<br><br><br>","courseFormat":"This course covers two chapters from&nbsp;<a href=\"http:\/\/bioinformaticsalgorithms.org\/\" target=\"_blank\">Bioinformatics Algorithms: An Active Learning Approach<\/a>, by Compeau &amp; Pevzner. &nbsp;The course also contains summary quizzes and lecture videos.<br><br>To earn a standard certificate in the class, you must complete weekly quizzes in addition to&nbsp;a Bioinformatics&nbsp;Application Challenge in which you apply popular bioinformatics&nbsp;software tools to a&nbsp;real experimental dataset. If you are eager&nbsp;to&nbsp;learn about bioinformatics, you&nbsp;should be able to&nbsp;complete the Application Challenge and earn the course&nbsp;certificate&nbsp;even if you&nbsp;do not know how to program.<br><br>To earn a certificate with&nbsp;distinction, rather than complete the Software Challenge, you&nbsp;must complete some programming assignments found in the course's interactive text. The distinction is a \"hacker track\" that is&nbsp;aimed at learners who know how to program and would like to explore the nuts and bolts of bioinformatics algorithms.<br>","suggestedReadings":"The printed course companion is<i>&nbsp;<a href=\"http:\/\/bioinformaticsalgorithms.org\/\" target=\"_blank\">Bioinformatics Algorithms: An Active-Learning Approach<\/a><\/i>&nbsp;(2nd edition), by Compeau &amp; Pevzner.","estimatedClassWorkload":"4-10 hours\/week","recommendedBackground":"\"<a href=\"http:\/\/coursera.org\/course\/hiddenmessages\" target=\"_blank\" title=\"Link: http:\/\/coursera.org\/course\/hiddenmessages\">Finding Hidden Messages in DNA<\/a>\" is the suggested prerequisite for taking this course, but it is not a strict prerequisite.<br><br>If you are aiming at earning a standard certificate in this class, then you do not need to have any experience in biology or programming. &nbsp;The only prerequisite is the enthusiasm to learn about how computational approaches are used in modern biology :)<br><br>If you are aiming at earning a certificate with distinction, then you should either know the basics of programming in the language of your choice (there is no required language for this course) or be willing to learn about programming before the course begins. In this case, in addition to the first course in this series,&nbsp;&nbsp;we have the following suggestions for resources that will help you learn programming:<br><ul><li>The language tracks on&nbsp;<a href=\"http:\/\/codecademy.com\/\" target=\"_blank\">Codecademy<\/a>, particularly the Python track.<br><\/li><li><a href=\"https:\/\/www.coursera.org\/course\/interactivepython\" target=\"_blank\">An Introduction to Interactive Programming with Python<\/a>, the acclaimed Coursera course.<br><\/li><li>Introductory problems on&nbsp;<a href=\"http:\/\/rosalind.info\/\" target=\"_blank\">Rosalind<\/a>, a resource for learning bioinformatics created by the course instructors.<br><\/li><\/ul>","links":{}}