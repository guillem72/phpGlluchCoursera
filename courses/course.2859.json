{"id":2859,"shortName":"comparinggenomes","name":"Comparing Genes, Proteins, and Genomes (Bioinformatics III)","language":"en","shortDescription":"After sequencing genomes, we would like to compare them. We will see that dynamic programming is a powerful algorithmic tool when we compare two genes (i.e., short sequences of DNA) or two proteins. When we \"zoom out\" to compare entire genomes, we will employ combinatorial algorithms.","aboutTheCourse":"DNA mutations can broadly be divided into two categories. Point mutations, in which a single nucleotide (A, C, G, T) is altered, inserted, or deleted, are comparable to erosion slowly changing the shape of a boulder. Much of human differentiation is attributable to the accumulation of point mutations.<br><br>The other type of mutation is extremely rare and can cause dramatic effects on the scale of species evolution. &nbsp;In genome rearrangements, huge blocks of DNA are heaved around, often from one chromosome to another. These mutations are comparable to earthquakes, which hoist up mountains and wrench apart continents.<br><br>When we compare two relatively short pieces of DNA that have not been affected by genome rearrangements (say, two genes taken from individuals from the same species), our goal is to identify a \"path of least resistance\" connecting these two genes via point mutations. &nbsp;We can find such a path using a powerful algorithmic paradigm called <strong>dynamic programming<\/strong>.<br><br>On the other hand, when we zoom out to the compare entire genomes taken from different species that diverged millions of years ago (such as humans and mice), the effects of genome rearrangements become more pronounced. To determine how far diverged these genomes are, we will need completely different <strong>combinatorial algorithms<\/strong><strong>&nbsp;<\/strong>that will help us answer&nbsp;questions about the patterns of genome rearrangements. For example, in order to move around large blocks of DNA, a genome rearrangement must \"break\" the genome in at least two places. We know that there are fault lines on the earth's surface where earthquakes are more likely; are there analogous \"fragile regions\" in the human genome where breakage has been more likely to occur during a genome rearrangement?<br>","targetAudience":1,"courseSyllabus":"<strong>How Do We Compare Biological Sequences?<\/strong> (Dynamic Programming)<br><ul><li>Cracking the non-ribosomal code<\/li><li>Introduction to sequence alignment<\/li><li>The Manhattan Tourist Problem<\/li><li>Sequence alignment is the Manhattan Tourist Problem in disguise<\/li><li>An introduction to dynamic programming: The Change Problem<\/li><li>The Manhattan Tourist Problem revisited<\/li><li>From Manhattan to an arbitrary DAG<\/li><li>Backtracking in the alignment graph<\/li><li>Scoring alignments<\/li><li>From global to local alignment<\/li><li>The changing faces of sequence alignment<\/li><li>Penalizing insertions and deletions in sequence alignments<\/li><li>Space-efficient sequence alignment<\/li><li>Epilogue: Multiple sequence alignment<\/li><\/ul><strong>Are There Fragile Regions in the Human Genome?<\/strong> (Combinatorial Algorithms)<br><ul><li>Of mice and men<\/li><li>The Random Breakage Model of chromosome evolution<\/li><li>Sorting by reversals<\/li><li>A greedy algorithm for sorting by reversals<\/li><li>Breakpoints<\/li><li>Rearrangements in tumor genomes<\/li><li>From unichromosomal to multichromosomal genomes<\/li><li>Breakpoint graphs<\/li><li>Computing the 2-break distance<\/li><li>Rearrangement hotspots in the human genome<\/li><li>Epilogue: Synteny block construction<\/li><\/ul>","courseFormat":"The majority of assessments for the course will consist of exercises and programming assignments. This course covers two chapters taken from&nbsp;<a href=\"http:\/\/bioinformaticsalgorithms.org\/\" target=\"_blank\">Bioinformatics Algorithms: An Active Learning Approach<\/a>, by Compeau &amp; Pevzner.<br><br>To earn a standard certificate in the class, you must complete weekly quizzes in addition to&nbsp;a Bioinformatics&nbsp;Application Challenge in which you apply popular bioinformatics&nbsp;software tools to a&nbsp;real experimental dataset. If you are eager&nbsp;to&nbsp;learn about bioinformatics, you&nbsp;should be able to&nbsp;complete the Application Challenge and earn the course&nbsp;certificate&nbsp;even if you&nbsp;do not know how to program.<br><br>To earn a certificate with&nbsp;distinction, rather than complete the Application Challenge, you&nbsp;must complete some programming assignments found in the course's interactive text. The distinction is a \"hacker track\" that is&nbsp;aimed at learners who know how to program and would like to explore the nuts and bolts of bioinformatics algorithms.<br>","suggestedReadings":"The printed course companion is<i>&nbsp;<a href=\"http:\/\/bioinformaticsalgorithms.org\/\" target=\"_blank\" title=\"Link: http:\/\/bioinformaticsalgorithms.org\/\">Bioinformatics Algorithms: An Active-Learning Approach<\/a><\/i>&nbsp;(2nd edition), by Compeau &amp; Pevzner.","estimatedClassWorkload":"4-10 hours\/week","recommendedBackground":"\"<a href=\"http:\/\/coursera.org\/course\/assembly\" target=\"_blank\">Assembling DNA and Proteins<\/a>\" is the suggested prerequisite for taking this course, but it is not a strict prerequisite, especially if you have some programming experience.<br><br>The \"hacker track\" programming assignments in this class can be solved using any programming language.","links":{}}