{"id":480,"shortName":"linearprogramming","name":"Linear and Integer Programming","language":"en","shortDescription":"This course will cover the very basic ideas in optimization. Topics include the basic theory and algorithms behind linear and integer linear programming along with some of the important applications. We will also explore the theory of convex polyhedra using linear programming.\n","aboutTheCourse":"<div><p>Linear Programming (LP) is arguably one of the most important optimization problems in applied mathematics and engineering. The Simplex algorithm to solve linear programs is widely regarded as one among the \"<a href=\"http:\/\/www.siam.org\/pdf\/news\/637.pdf\">top ten<\/a>\"&nbsp;algorithms of the 20th century. Linear Programs arise in almost all fields of engineering including operations research, statistics, machine learning, control system design, scheduling, formal verification&nbsp;and computer vision. It forms the basis for numerous approaches to solving hard combinatorial optimization problems through randomization and approximation.<\/p><p><br><\/p><p>The primary goals of this course&nbsp;will be to:<\/p><p>1. Understand the basic theory behind LP, algorithms to solve LPs, and the basics of (mixed) integer programs (ILP).<\/p><p>2. Understand important and emerging applications of LP and ILPs to economic problems (optimal resource allocation, scheduling problems), machine learning (SVM), and combinatorial optimization problems.<\/p><p>At the end of the course, the successful student will be able to cast various problems that may arise in her research as optimization problems, understand the cases where the optimization problem will be linear, choose appropriate solution methods and interpret results appropriately.<i> This is generally considered a useful ability in many research areas.<\/i><\/p><\/div><div><\/div><div><br><\/div>","targetAudience":1,"courseSyllabus":"<p><b style=\"font-size: 13.63636302948px;\">Introductory Material&nbsp;<\/b><br><\/p><ul><li>Introduction to Linear Programming.<\/li><\/ul><b>Week #1:&nbsp;<br><\/b><ul><li>The Diet Problem.<\/li><li>Linear Programming Formulations.<br><\/li><li>Tutorials on using GLPK (AMPL), Matlab, CVX and Microsft Excel.<\/li><li>The Simplex Algorithm (basics).<\/li><\/ul><b>Week #2:&nbsp;<\/b><ul><li>Handling unbounded problems<\/li><li>Degeneracy<\/li><li>Geometry of Simplex<\/li><li>Initializing Simplex.<\/li><li>Cycling and the Use of Bland's rule.<\/li><\/ul><b>Week #3:<\/b><ul><li>Duality: dual variables and dual linear program.<\/li><li>Strong duality theorem.<\/li><li>Complementary Slackness.&nbsp;<\/li><li>KKT conditions for Linear Programs.<\/li><li>Understanding the dual problem: shadow costs.<\/li><li><i>Extra:<\/i> The revised simplex method.<\/li><\/ul><b>Week #4:&nbsp;<\/b><br><ul><li>Advanced LP formulations: norm optimization.<\/li><li>Least squares, and quadratic programming.<\/li><li>Applications #1: Signal reconstruction and De-noising.<\/li><li>Applications #2: Regression.<\/li><\/ul><b>Week #5:&nbsp;<\/b><br><ul><li>Integer Linear Programming.<\/li><li>Integer vs. Real-valued variables.<\/li><li>NP-completeness: basic introduction.<\/li><li>Reductions from Combinatorial Problems (SAT, TSP and Vertex Cover).<\/li><li>Approximation Algorithms: Introduction.<\/li><\/ul><b>Week #6:<\/b><br><ul><li>Branch and Bound Method<\/li><li>Cutting Plane Method<\/li><\/ul><strong><\/strong><strong>Week #7:<\/strong><br><ul><li>Applications: solving puzzles (Sudoku), reasoning about systems and other applications.<\/li><li>Classification and Machine Learning<\/li><\/ul>","courseFormat":"Each class will consist of many short lecture videos between 10-15 minutes in length with nearly 1.5-2 hours of &nbsp;lectures each week. We will have weekly assignments involving 5-10 problems each week. These assignments will either be multiple choice or ask you to compute something and enter the answer. We will have four programming assignments (one every two weeks) that will incrementally help you build an ILP solver. Programming assignments can be done in virtually any general purpose language.<br><br>The course will be structured with two interactive tracks: algorithms\/theory for linear optimization problems and applications. The applications will include ideas on modeling real-life optimization problems as linear programs and the appropriate use of concepts like duality in finding and interpreting solutions.","suggestedReadings":"<p><strong>Textbook:<\/strong>&nbsp;<a href=\"http:\/\/chggtrx.com\/click.track?CID=267582&amp;AFID=301076&amp;ADID=1088031&amp;SID=linearprogramming&amp;isbn_ean=9780387743875\">Linear Programming by Robert J. Vanderbei <\/a>(available online &nbsp;from author's webpage).<\/p><p><br><\/p><p><strong>Alternative:<\/strong>&nbsp;<a href=\"http:\/\/www.amazon.com\/Linear-Programming-Series-Mathematical-Sciences\/dp\/0716715872\" title=\"Link: http:\/\/www.amazon.com\/Linear-Programming-Series-Mathematical-Sciences\/dp\/0716715872\">Linear Programming by Vasek Chvatal, W.H. Freeman<\/a>&nbsp;published, 1983. This book still remains a very clear and concise presentation.&nbsp;<br><\/p><p><b>Other texts: <\/b>We may borrow material that is covered in some of the<b>&nbsp;<\/b>texts below. As you go down this list, the texts become less relevant for this class but remain very important for the broader field of optimization that we seek to introduce through this class.<\/p><ol><li><a href=\"http:\/\/www.amazon.com\/Combinatorial-Optimization-Algorithms-Complexity-Computer\/dp\/0486402584\" target=\"_blank\" title=\"Link: http:\/\/www.amazon.com\/Combinatorial-Optimization-Algorithms-Complexity-Computer\/dp\/0486402584\">Combinatorial optimization: Algorithms &amp; Complexity<\/a>, by Christos Papadimitrou and Ken Steglitz.<\/li><li><a href=\"http:\/\/www.amazon.com\/dp\/0387948333\" target=\"_blank\" title=\"Link: http:\/\/www.amazon.com\/dp\/0387948333\">Linear Programming<\/a>&nbsp;series of two books&nbsp;by G.B. Danzig and M.K. Thapa.<br><\/li><li>Schrijver's book on the <i><a href=\"http:\/\/www.amazon.com\/Theory-Integer-Programming-Alexander-Schrijver\/dp\/0471982326\" target=\"_blank\">Theory of Integer Linear Programming and Integer<\/a>, I<a href=\"http:\/\/www.amazon.com\/Integer-Combinatorial-Optimization-Laurence-Wolsey\/dp\/0471359432\" target=\"_blank\">nteger and&nbsp;Combinatoral Optimization<\/a> <\/i>book by Wolsey and&nbsp;Nemhauser are also good references.&nbsp;<br><\/li><li><i><a href=\"http:\/\/www.stanford.edu\/~boyd\/cvxbook\/\" target=\"_blank\">Convex Optimization<\/a><\/i> by Boyd and Vandenbreghe is a good reference for the more general area of convex optimization.<\/li><li><i><a href=\"http:\/\/www.amazon.com\/dp\/0387303030\" target=\"_blank\">Numerical Optimization<\/a><\/i> by Nocedal and Wright is a great reference for solving non-linear optimization problems.&nbsp;<\/li><\/ol>","instructor":"Sriram Sankaranarayanan","estimatedClassWorkload":"5-7 hours\/week","recommendedBackground":"<em><\/em>Mathematical Maturity (undergraduate algorithms or CS theory) and basic programming ability. <br><br>A background in engineering or applied sciences could be useful, as well.<br><br>The prerequisites for this class include:<br><ul><li><strong>Basic College Level mathematics:<\/strong>&nbsp;calculus and some linear algebra: matrices, matrix operations and solving linear equations.<\/li><li><strong>Programming skills:<\/strong>&nbsp;<span><strong> <\/strong>However, &nbsp; students without a programming background &nbsp;can pass the course by solving all the weekly assignments.<\/span><\/li><\/ul><br><ul><\/ul>","links":{}}