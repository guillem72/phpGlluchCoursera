{"id":66,"shortName":"programming2","name":"Learn to Program: Crafting Quality Code","language":"en","shortDescription":"Not all programs are created equal. \u00a0In this course, we'll focus on writing quality code that runs correctly and efficiently. \u00a0We'll design, code and validate our programs and learn how to compare programs that are addressing the same task.","aboutTheCourse":"<div>Most programs are used for years and are worked on by many people. Having programs that are easy to understand is essential, in the same way that a well-organized essay is far easier to follow than a disorganized one. We\u2019ll show you an approach that helps to break down problems into smaller tasks that are easier to both solve and read.<\/div>\n<div>&nbsp;<\/div>\n<div>This design approach also makes it more straightforward to find and fix flaws. You'll be introduced to the tools that professional programmers use; they're called \"testing\" and \"debugging\".<\/div>\n<div>&nbsp;<\/div>\n<div>For most complex problems, there are many programs that solve them. Some are inherently slower than others. You'll learn how to read two programs and compare them for efficiency.<\/div>","targetAudience":0,"courseSyllabus":"","courseFormat":"The class consists of 1 to 2 hours of lecture each week, which are made up of videos that are generally shorter than 12 minutes each. Each video contains integrated quiz questions. There are also weekly standalone exercises that are not part of the video lectures and&nbsp;a couple of programming projects. &nbsp;Part of the course will involve grading projects submitted by other participants.","suggestedReadings":"Click to purchase\n\n<p>We are writing a textbook that matches the course material closely, and includes different examples and exercises than the ones you'll encounter in this course.  It also covers the same course material as presented in Learn to Program: The Fundamentals.\n<\/p>\n<p>This title is currently available in Beta. Buy the eBook now, and you'll be able to download successive releases of the eBook as we add material and correct mistakes. You'll get the final eBook when the book is finished.  If you want more reading and practice before LTP2 starts on 25 March, this book is an excellent way to get it. You can choose to purchase an electronic version (PDF, ePub, mobi) as well as a paper book.\n<\/p>\n<p>You can visit the Contents\/extracts tab for <a href=\"http:\/\/pragprog.com\/book\/gwpy2\/practical-programming\">Practical Programming (2nd edition)<\/a> to see the progress; any chapter that lists subsections is included in the Beta.\n<\/p>","instructor":"Jennifer Campbell and Paul Gries","estimatedClassWorkload":"6-8 hours\/week","recommendedBackground":"This course assumes <a href=\"https:\/\/www.coursera.org\/course\/programming1\">\u201cLearn To Program: The Fundamentals\u201d<\/a>, or similar background. &nbsp;You should be comfortable with these topics in Python 3:<br><br><ul><li>Function definition, function call, method call<\/li><li>Types: bool, int, float, str, list, dict, tuple<\/li><li>Control structures: if, for, while<\/li><li>File reading and writing<\/li><\/ul>You should also be familiar with the&nbsp;function design recipe,&nbsp;the Python visualizer, the IDLE debugger,&nbsp;and&nbsp;from&nbsp;<a href=\"https:\/\/www.coursera.org\/course\/programming1\">Learn To Program: The Fundamentals<\/a>. &nbsp;If you did not take LTP1, please register, visit the class archive,&nbsp;and review at least&nbsp;these videos:<br><span><br>Week 1:<\/span><br><ul><li>Python and Computer Memory<\/li><li>Variables<\/li><\/ul>Week 2:<br><ul><li>Docstrings and Function help<\/li><li>Function Design Recipe<\/li><li>Visualizing Function Calls<\/li><\/ul>Week 3:<br><ul><li>Functions, Variables, and the Call Stack<\/li><\/ul>Week 4:<br><ul><li>IDLE's Debugger<\/li><\/ul>Week 5:<br><ul><li>Mutability and Aliasing<\/li><\/ul><div><\/div>","links":{}}