{"id":746,"shortName":"recsys","name":"Introduction to Recommender Systems","language":"en","previewLink":"https:\/\/class.coursera.org\/recsys-001\/lecture\/preview","shortDescription":"This course introduces the concepts, applications, algorithms, programming, and design of recommender systems--software systems that recommend products or information, often based on extensive personalization.  Learn how web merchants such as Amazon.com personalize product suggestions and how to apply the same techniques in your own systems!","aboutTheCourse":"<p>Recommender\n systems have changed the way people find products, information, and even \nother people. They study patterns of behavior to know what someone will \nprefer from among a collection of things he has never experienced. The \ntechnology behind recommender systems has evolved over the past 20 years\n into a rich collection of tools that enable the practitioner or \nresearcher to develop effective recommenders. We will study the most \nimportant of those tools, including how they work, how to use them, how \nto evaluate them, and their strengths and weaknesses in practice.<\/p><p>The\n algorithms we will study include content-based filtering, user-user \ncollaborative filtering, item-item collaborative filtering, dimensionality \nreduction, and interactive critique-based recommenders. The approach \nwill be hands-on, with six two week projects, each of which will involve\n implementation and evaluation of some type of recommender.<\/p><p>In addition to topical lectures, this course includes interviews and \nguest lectures with experts from both academia and industry.<br><\/p><p><b>Two Ways to Take this Course<\/b>:<\/p><p>This course is designed to support two different types of students and educational goals:<\/p><p><i>Programming Track<\/i>: &nbsp;Designed\n for students with significant programming and mathematics experience \n(see below), the programming track combines a conceptual and \nmathematical understanding of recommender systems with experience \nprogramming six different recommender systems projects. &nbsp;Students \ncompleting this travel will gain the skills needed to implement basic \nrecommenders from scratch, and to use software libraries and tools to \nimplement more advanced recommenders.<\/p><p><i>Concepts Track<\/i>:<span>\n &nbsp;Students who are not experienced programmers, or who are primarily \ninterested in understanding the concepts and techniques of recommender \nsystems, without learning to program them, can choose to focus on the \nconceptual and mathematical content, skipping the programming projects \nand associated lecture content.&nbsp; Students in the concepts track are \nstill expected to have significant familiarity with computing systems \nand college-level mathematics, but need not be accomplished programmers.\n &nbsp;We expect this track to be useful for tech-savvy marketing and \nbusiness leaders, as well as engineering managers who may oversee but \nnot directly develop recommender systems. &nbsp;We also hope it will be \nuseful to those looking to understand recommender systems concepts \nwithout the workload associated with programming those systems.&nbsp; <br><\/span><\/p>","targetAudience":1,"courseSyllabus":"<b><u>Topics covered<\/u><\/b>:\n<br>Week 1:\n<br>\n<blockquote>Introduction to Course and to Recommender Systems\n    <br>\n<\/blockquote>Weeks 2 and 3:\n<br>\n<blockquote>Non-Personalized Recommenders<br>Understanding Ratings, Predictions, and Recommendations<br>Scales and Normalization\n    <br>Interview with Anthony Jameson (DFKI AI Labs)\n<\/blockquote>Weeks 4 and 5:\n<br>\n<blockquote>Content-Based Recommenders<br>Inferring Preferences<br>Unary Ratings <br>Knowledge-Based Recommenders\n    <br>Introduction to LensKit Toolkit<br>Interviews with Robin Burke (DePaul University) and Barry Smyth (University College Dublin)\n<\/blockquote>Weeks 6 and 7:\n<br>\n<blockquote>Collaborative Filtering<br>User-User k-Nearest Neighbor Approach<br>Tuning CF Algorithms\n    <br>Interviews with Paul Resnick (University of Michigan), Jen Golbeck (University of Maryland) and Dan Cosley(Cornell University)\n<\/blockquote>Weeks 8 and 9:\n<br>\n<blockquote>Evaluation and Metrics; \n<br>Error Metrics; \n<br>Decision-Support Metrics<br>Comparative Evaluation: Dead Data vs. Laboratory vs. Field Study<br>User-Centered Metrics and Evaluation<br>Data Sets\n    <br>Interview with Neal Lathia (University of Cambridge)\n<\/blockquote>Weeks 10 and 11:\n<br>\n<blockquote>Collaborative Filtering II<br>Item-Item k-Nearest Neighbor<br>Business Rules<br>Adjustments for Serendipity and Diversity<br>Performance Comparisons<br>Hybrid Algorithms\n    <br>Interviews with Brad Miller (Luther College) and Robin Burke (DePaul University)\n<\/blockquote>Weeks 12 and 13:\n<br>\n<blockquote>Dimensionality Reduction Recommenders<br>Concepts behind Latent Semantic Analysis and Singular Value Decomposition<br>\n<\/blockquote>Week 14:\n<br>\n<blockquote>Alternative Recommender Approaches<br>Interactive Recommenders<br>Critique and Dialog-based Approaches<br>Advanced Topics<br>Resources<br>Interview with Anthony Jameson (DFKI AI Labs), Francesco Ricci (Free University of Bozen-Bolzano), Xavier Amatriain (NetFlix) and Anmol Bhasin (LinkedIn)<br>Conclusion\n    <br>\n<\/blockquote><br>","courseFormat":"<p>Course\n content will consist of lecture videos (with PDFs of used slides \navailable), online resources including review and research articles, and\n online discussion forums.&nbsp; Additionally, we will be recording live \nQ&amp;A and discussion sessions held with students enrolled for credit \nat the University of Minnesota; at those sessions, we will be addressing\n many of the top-scoring questions from the class forums.&nbsp; <br><\/p><p><span>Course\n evaluation will include three components: &nbsp;written assignments, \nquizzes, and programming assignments (programming track only). &nbsp;While \nmany assignments will be automatically graded, some will use peer \ngrading; students must complete peer grading to earn credit for their \nown submission.&nbsp; <br><\/span><\/p><br>","suggestedReadings":"Specific readings will be identified to accompany particular lectures or assignments. &nbsp;All such readings will be available to students online. &nbsp;Those interested in an introductory text are invited to consider <i>Recommender Systems: An Introduction<\/i> by Jannach et al. &nbsp;","estimatedClassWorkload":"4-10 hours\/week","recommendedBackground":"<p>For the <i>Concepts Track<\/i> students should have a basic familiarity with college-level algebra and a general understanding of computer systems concepts.<\/p>For the <i>Programming Track<\/i> students should have significant skill in Java programming, basic data structures, college-level algebra, and the ability to install and manage sophisticated software development tools and libraries. &nbsp;Programming track students will install and use significant open-source software tools. Therefore, a special lecture in the first week of class will identify the tool and installation options for various computing platforms.","links":{}}